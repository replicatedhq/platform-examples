{{- if .Values.postgres.embedded.enabled -}}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ include "mlflow.fullname" . }}-postgres
  {{- with .Values.postgres.embedded.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
  {{- include "mlflow.labels" . | nindent 4 }}
  {{- with .Values.postgres.embedded.additionalLabels }}
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  instances: {{ .Values.postgres.embedded.instances }}
  imageName: {{ printf "%s:%s" .Values.postgres.embedded.image.repository .Values.postgres.embedded.image.tag }}
  imagePullPolicy: {{ .Values.postgres.embedded.imagePullPolicy }}
  {{- with .Values.postgres.embedded.imagePullSecrets}}
  imagePullSecrets:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
  postgresUID: {{ .Values.postgres.embedded.postgresUID }}
  postgresGID: {{ .Values.postgres.embedded.postgresGID }}
  storage:
    size: {{ .Values.postgres.embedded.storage.size }}
    storageClass: {{ .Values.postgres.embedded.storage.storageClass }}
  {{- with .Values.postgres.embedded.resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{ end }}
  affinity:
  {{- if .Values.postgres.embedded.affinity }}
    {{- toYaml .Values.postgres.embedded.affinity | nindent 8 }}
  {{- else if .Values.postgres.embedded.podAntiAffinityTopologyKey }}
    podAntiAffinity:
    {{- if eq .Values.postgres.embedded.podAntiAffinityMode "hard" }}
      requiredDuringSchedulingIgnoredDuringExecution:
        labelSelector:
          matchExpressions:
          - key: "app.kubernetes.io/name"
            operator: In
            values: 
          - {{ include "mlflow.name" . }} 
        topologyKey: "{{ .Values.postgres.embedded.podAntiAffinityTopologyKey }}"
    {{- else if eq .Values.postgres.embedded.podAntiAffinityMode "soft"}}
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: "{{ .Values.postgres.embedded.podAntiAffinityTopologyKey }}"
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/name"
                operator: In
                values: 
                - {{ include "mlflow.name" . }}
    {{- else }}
      {{- fail (printf "(%s) is not a valid pod antiAffinity mode" .Values.postgres.embedded.podAntiAffinityMode) }}
    {{- end }}
  {{- end }}
  priorityClassName: {{ .Values.postgres.embedded.priorityClassName }}
  primaryUpdateMethod: {{ .Values.postgres.embedded.primaryUpdateMethod }}
  primaryUpdateStrategy: {{ .Values.postgres.embedded.primaryUpdateStrategy }}
  logLevel: {{ .Values.postgres.embedded.logLevel }}
  {{- with .Values.postgres.embedded.certificates }}
  certificates:
    {{- toYaml . | nindent 4 }}
  {{ end }}
  enableSuperuserAccess: {{ .Values.postgres.embedded.enableSuperuserAccess }}
  {{- with .Values.postgres.embedded.superuserSecret }}
  superuserSecret:
    name: {{ . }}
  {{ end }}
  postgresql:
    shared_preload_libraries:
      {{- if eq .Values.postgres.embedded.type "timescaledb" }}
      - timescaledb
      {{- end }}
    {{- with .Values.postgres.embedded.postgresql }}
    parameters:
      {{- toYaml . | nindent 6 }}
    {{ end }}
  managed:
    {{- with .Values.postgres.embedded.roles }}
    roles:
      {{- toYaml . | nindent 6 }}
    {{ end }}
  bootstrap:
    initdb:
      database: {{ .Values.postgres.embedded.initdb.database | quote }}
      owner: {{ .Values.postgres.embedded.initdb.owner | quote }}
      secret:
        name: {{ printf "%s-postgres-auth" (include "mlflow.fullname" .)  | trunc 63 | trimAll "-" }}
      postInitApplicationSQL:
        {{- if eq .Values.postgres.embedded.type "postgis" }}
        - CREATE EXTENSION IF NOT EXISTS postgis;
        - CREATE EXTENSION IF NOT EXISTS postgis_topology;
        - CREATE EXTENSION IF NOT EXISTS fuzzystrmatch;
        - CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;
        {{- else if eq .Values.postgres.embedded.type "timescaledb" }}
        - CREATE EXTENSION IF NOT EXISTS timescaledb;
        {{- end }}
        {{- with .Values.postgres.embedded.initdb.postInitApplicationSQL }}
        {{- range . }}
        - {{ . }}
        {{- end }}
        {{- end }}
{{- end -}}
