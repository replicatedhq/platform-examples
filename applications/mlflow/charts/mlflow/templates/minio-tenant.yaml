{{- if .Values.minio.enabled }}
{{- with .Values.minio.tenant }}
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: {{ .name }}
  labels:
    app: minio
    {{- include "mlflow.labels" $ | nindent 4 }}
  {{- if dig "metrics" "enabled" false . }}
  ## Annotations for MinIO Tenant Pods
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: {{ dig "metrics" "port" 9000 . | quote }}
    prometheus.io/scrape: "true"
    prometheus.io/scheme: {{ dig "metrics" "protocol" "http" . | quote }}
  {{- end }}
{{- if dig "scheduler" "name" "" . }}
scheduler:
  name: {{ dig "scheduler" "name" "" . }}
{{- end }}
spec:
  image: "{{ .image.repository }}:{{ .image.digest | default .image.tag }}"
  imagePullPolicy: {{ dig "image" "pullPolicy" "IfNotPresent" . }}
  {{- if dig "imagePullSecret" "name" "" . }}
  imagePullSecret:
    name: {{ dig "imagePullSecret" "name" "" . }}
  {{- end }}
  ## Secret with default environment variable configurations
  configuration:
    name: {{ .configuration.name }}
  pools:
    {{- range $name, $poolValues := .pools }}
    - servers: {{ dig "servers" 3 $poolValues }}
      name: {{ $name }}
      volumesPerServer: {{ dig "volumesPerServer" 4 $poolValues }}
      {{- if dig "runtimeClassName" "" $poolValues }}
      runtimeClassName: {{ dig "runtimeClassName" "" $poolValues }}
      {{- end }}
      volumeClaimTemplate:
        metadata:
          name: data
      {{- with (dig "storageAnnotations" (dict) $poolValues) }}
          annotations: {{- toYaml . | nindent 12 }}
      {{- end }}
        spec:
          {{- if dig "storageClassName" "" $poolValues }}
          storageClassName: {{ dig "storageClassName" "" $poolValues }}
          {{- end }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ dig "size" "10Gi" $poolValues }}
      {{- with (dig "annotations" (dict) $poolValues) }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (dig "labels" (dict) $poolValues) }}
      labels: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (dig "tolerations" (list) $poolValues) }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (dig "nodeSelector" (dict) $poolValues) }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- if $poolValues.affinity }}
        {{- toYaml $poolValues.affinity | nindent 8 }}
      {{- else if $poolValues.podAntiAffinityTopologyKey }}
        podAntiAffinity:
        {{- if eq $poolValues.podAntiAffinityMode "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app.kubernetes.io/name"
                operator: In
                values: 
                - {{ include "mlflow.name" $ }} 
            topologyKey: "{{ $poolValues.podAntiAffinityTopologyKey }}"
        {{- else if eq $poolValues.podAntiAffinityMode "soft"}}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "{{ $poolValues.podAntiAffinityTopologyKey }}"
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values: 
                    - {{ include "mlflow.name" $ }}
        {{- else }}
          {{- fail (printf "(%s) is not a valid pod antiAffinity mode" $poolValues.podAntiAffinityMode) }}
        {{- end }}
      {{- end }}
      {{- with (dig "resources" (dict) $poolValues) }}
      resources: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if hasKey $poolValues "securityContext" }}
      securityContext: {{- if eq (len $poolValues.securityContext) 0 }} {} {{- end }}
      {{- with (dig "securityContext" (dict) $poolValues) }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if hasKey $poolValues "containerSecurityContext" }}
      containerSecurityContext: {{- if eq (len $poolValues.containerSecurityContext) 0 }} {} {{- end }}
      {{- with (dig "containerSecurityContext" (dict) $poolValues) }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with (dig "topologySpreadConstraints" (list) $poolValues) }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
  mountPath: {{ dig "mountPath" "/export" . }}
  subPath: {{ dig "subPath" "/data" . }}
  {{- with (dig "certificate" "externalCaCertSecret" (list) .) }}
  externalCaCertSecret: {{- toYaml . | nindent 6 }}
  {{- end }}
  {{- with (dig "certificate" "externalCertSecret" (list) .) }}
  externalCertSecret: {{- toYaml . | nindent 6 }}
  {{- end }}
  requestAutoCert: {{ dig "certificate" "requestAutoCert" false . }}
  {{- if dig "s3" "bucketDNS" false . }}
    {{- fail "Value 'tenant.s3.bucketDNS' is deprecated since Operator v4.3.2, use 'tenant.features.bucketDNS' instead" }}
  {{- end }}
  features:
    bucketDNS: {{ dig "features" "bucketDNS" false . }}
    {{- with (dig "features" "domains" (dict) .) }}
    domains: {{- toYaml . | nindent 6 }}
    {{- end }}
    enableSFTP: {{ dig "features" "enableSFTP" false . }}
  {{- with (dig "buckets" (list) .) }}
  buckets: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "users" (list) .) }}
  users: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "certificate" "certConfig" (dict) .) }}
  certConfig: {{- toYaml . | nindent 4 }}
  {{- end }}
  podManagementPolicy: {{ dig "podManagementPolicy" "Parallel" . }}
  {{- with (dig "readiness" (dict) .) }}
  readiness: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "liveness" (dict) .) }}
  liveness: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "startup" (dict) .) }}
  startup: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "lifecycle" (dict) .) }}
  lifecycle: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "exposeServices" (dict) .) }}
  exposeServices: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if dig "serviceAccountName" "" . }}
  serviceAccountName: {{ dig "serviceAccountName" "" . }}
  {{- end }}
  prometheusOperator: {{ dig "prometheusOperator" "false" . }}
  {{- with (dig "logging" (dict) .) }}
  logging: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "serviceMetadata" (dict) .) }}
  serviceMetadata: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "env" (list) .) }}
  env: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if dig "priorityClassName" "" . }}
  priorityClassName: {{ dig "priorityClassName" "" . }}
  {{- end }}
  {{- with (dig "additionalVolumes" (list) .) }}
  additionalVolumes: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (dig "additionalVolumeMounts" (list) .) }}
  additionalVolumeMounts: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if dig "kes" "configuration" false . }}
  kes:
    image: "{{ .kes.image.repository }}:{{ .kes.image.digest | default .kes.image.tag }}"
    {{- with (dig "kes" "env" (list) .) }}
    env: {{- toYaml . | nindent 4 }}
    {{- end }}
    replicas: {{ .kes.replicas | int }}
    kesSecret:
      name: "kes-configuration"
    imagePullPolicy: {{ .kes.imagePullPolicy | quote }}
    {{- with (dig "kes" "externalCertSecret" (dict) .) }}
    externalCertSecret: {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with (dig "kes" "clientCertSecret" (dict) .) }}
    clientCertSecret: {{- toYaml . | nindent 6 }}
    {{- end }}
    ## Key name to be created on the KMS, default is "my-minio-key"
    keyName: {{ .kes.keyName | quote }}
    {{- with (dig "resources" (dict) .) }}
    resources: {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with (dig "nodeSelector" (dict) .) }}
    nodeSelector: {{- toYaml . | nindent 4 }}
    {{- end }}
    affinity:
      nodeAffinity: {}
      podAffinity: {}
      podAntiAffinity: {}
    tolerations: []
    {{- with (dig "annotations" (dict) .) }}
    annotations: {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with (dig "labels" (dict) .) }}
    labels: {{- toYaml . | nindent 4 }}
    {{- end }}
    serviceAccountName: {{ .kes.serviceAccountName | quote }}
    {{- if hasKey .kes "securityContext" }}
    securityContext: {{- if eq (len .kes.securityContext) 0 }} {} {{- end }}
    {{- with (dig "kes" "securityContext" (dict) .) }}
    {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- end }}
    {{- if hasKey .kes "containerSecurityContext" }}
    containerSecurityContext: {{- if eq (len .kes.containerSecurityContext) 0 }} { } {{- end }}
      {{- with (dig "kes" "containerSecurityContext" (dict) .) }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
  {{- end }}
{{- end }}
{{- end }}
