version: "3"

includes:
  utils: ./taskfiles/utils.yml
  dev: ./taskfiles/container.yml

vars:
  # Application configuration
  APP_NAME: '{{.REPLICATED_APP | default "wg-easy"}}'

  # Cluster configuration
  CLUSTER_NAME: '{{.CLUSTER_NAME | default "test-cluster"}}'
  K8S_VERSION: '{{.K8S_VERSION | default "1.32.2"}}'
  DISK_SIZE: '{{.DISK_SIZE | default "100"}}'
  INSTANCE_TYPE: '{{.INSTANCE_TYPE | default "r1.small"}}'
  DISTRIBUTION: '{{.DISTRIBUTION | default "k3s"}}'
  KUBECONFIG_FILE: './{{.CLUSTER_NAME}}.kubeconfig'

  # Ports configuration
  EXPOSE_PORTS:
    - port: 30443
      protocol: https
    - port: 30080
      protocol: http

  # GCP default configuration
  GCP_PROJECT: '{{.GCP_PROJECT | default "replicated-qa"}}'
  GCP_ZONE: '{{.GCP_ZONE | default "us-central1-a"}}'
  VM_NAME: '{{.VM_NAME | default (printf "%s-dev" (or (env "GUSER") "user"))}}'

  # Container workflow configuration
  DEV_CONTAINER_REGISTRY: '{{.DEV_CONTAINER_REGISTRY | default "ghcr.io"}}'
  DEV_CONTAINER_IMAGE: '{{.DEV_CONTAINER_IMAGE | default "replicatedhq/platform-examples/wg-easy-tools"}}'
  DEV_CONTAINER_TAG: '{{.DEV_CONTAINER_TAG | default "latest"}}'
  DEV_CONTAINER_NAME: '{{.DEV_CONTAINER_NAME | default "wg-easy-tools"}}'
  CONTAINER_RUNTIME: '{{.CONTAINER_RUNTIME | default "podman"}}'

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list

  cluster-create:
    desc: Create a test cluster using Replicated Compatibility Matrix (use EMBEDDED=true for embedded clusters)
    cmds:
      - task: dev:shell
        vars:
          CMD: "task cluster-create"

  list-cluster:
    desc: List the cluster
    cmds:
      - task: dev:shell
        vars:
          CMD: "task list-cluster"

  test:
    desc: Run a basic test suite
    cmds:
      - task: dev:shell
        vars:
          CMD: "task test"

  verify-kubeconfig:
    desc: Verify kubeconfig
    cmds:
      - task: dev:shell
        vars:
          CMD: "task verify-kubeconfig"

  setup-kubeconfig:
    desc: Get kubeconfig and prepare cluster for application deployment
    cmds:
      - task: dev:shell
        vars:
          CMD: "task setup-kubeconfig"

  dependencies-update:
    desc: Update Helm dependencies for all charts
    cmds:
      - task: dev:shell
        vars:
          CMD: "task dependencies-update"

  ports-expose:
    desc: Expose configured ports and capture exposed URLs
    cmds:
      - task: dev:shell
        vars:
          CMD: "task ports-expose"

  helm-deploy:
    desc: Deploy all charts using helmfile
    cmds:
      - task: dev:shell
        vars:
          CMD: "task helm-deploy"

  cluster-delete:
    desc: Delete all test clusters with matching name and clean up kubeconfig
    cmds:
      - task: dev:shell
        vars:
          CMD: "task cluster-delete"

  release-prepare:
    desc: Prepare release files by copying replicated YAML files and packaging Helm charts
    cmds:
      - task: dev:shell
        vars:
          CMD: "task release-prepare"

  release-create:
    desc: Create and promote a release using the Replicated CLI
    cmds:
      - task: dev:shell
        vars:
          CMD: "task release-create"

  gcp-vm-create:
    desc: Create a simple GCP VM instance
    cmds:
      - task: dev:shell
        vars:
          CMD: "task gcp-vm-create"

  gcp-vm-delete:
    desc: Delete the GCP VM instance for K8s and VPN
    cmds:
      - task: dev:shell
        vars:
          CMD: "task gcp-vm-delete"

  embedded-cluster-setup:
    desc: Setup Replicated embedded cluster on the GCP VM
    cmds:
      - task: dev:shell
        vars:
          CMD: "task embedded-cluster-setup"

  full-test-cycle:
    desc: Create cluster, get kubeconfig, expose ports, update dependencies, deploy charts, test, and delete
    cmds:
      - task: dev:shell
        vars:
          CMD: "task full-test-cycle"
