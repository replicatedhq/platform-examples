# Global configuration
helmDefaults:
  verify: false
  wait: true
  timeout: 600
  atomic: true
  cleanupOnFail: true

environments:
  default:
    values:
      - chartSources:
          certManager: ./charts/cert-manager
          certManagerIssuers: ./charts/cert-manager-issuers
          traefik: ./charts/traefik
          wgEasy: ./charts/wg-easy
          replicatedSDK: ./charts/replicated
      - extras:
          enableReplicatedSDK: false
  replicated:
    values:
      - app: '{{ env "REPLICATED_APP" | default "wg-easy" }}'
      - channel: '{{ env "CHANNEL" | default "unstable" }}'
      - username: "test@example.com"
      - password: '{{env "REPLICATED_LICENSE_ID"}}'
      - chartSources:
          certManager: 'oci://registry.replicated.com/{{ env "REPLICATED_APP" | default "wg-easy" }}/{{ env "CHANNEL" | default "unstable" }}/cert-manager'
          certManagerIssuers: 'oci://registry.replicated.com/{{ env "REPLICATED_APP" | default "wg-easy" }}/{{ env "CHANNEL" | default "unstable" }}/cert-manager-issuers'
          traefik: 'oci://registry.replicated.com/{{ env "REPLICATED_APP" | default "wg-easy" }}/{{ env "CHANNEL" | default "unstable" }}/traefik'
          wgEasy: 'oci://registry.replicated.com/{{ env "REPLICATED_APP" | default "wg-easy" }}/{{ env "CHANNEL" | default "unstable" }}/wg-easy'
          replicatedSDK: 'oci://registry.replicated.com/{{ env "REPLICATED_APP" | default "wg-easy" }}/{{ env "CHANNEL" | default "unstable" }}/replicated'
      - extras:
          enableReplicatedSDK: true
      # Replicated Registry Proxy configurations for container images
      - proxyImages:
          wgEasy:
            image:
              repository: proxy.replicated.com/proxy/wg-easy-cre/ghcr.io/wg-easy/wg-easy
              tag: 14.0
          traefik:
            image:
              registry: proxy.replicated.com/proxy/wg-easy-cre/docker.io
              repository: traefik/traefik
          certManager:
            image:
              registry: proxy.replicated.com/proxy/wg-easy-cre/quay.io
              repository: jetstack/cert-manager-controller
            webhook:
              image:
                registry: proxy.replicated.com/proxy/wg-easy-cre/quay.io
                repository: jetstack/cert-manager-webhook
            cainjector:
              image:
                registry: proxy.replicated.com/proxy/wg-easy-cre/quay.io
                repository: jetstack/cert-manager-cainjector
---
{{- if eq .Environment.Name "replicated" }}
repositories:
  - name: registry.replicated.com
    oci: true
    url: registry.replicated.com
    username: '{{ .Values.username }}'
    password: '{{ .Values.password }}'
{{- end }}

releases:
  # Install cert-manager with CRDs but without issuers
  - name: cert-manager
    namespace: cert-manager
    chart: {{ .Values.chartSources.certManager }}
    version: 1.0.0
    createNamespace: true
    wait: true
    installed: true
    skipDeps: true
{{- if eq .Environment.Name "replicated" }}
    values:
      - cert-manager: {{ .Values.proxyImages.certManager | toYaml | nindent 10 }}
{{- end }}

  # Install issuers separately after cert-manager is ready
  - name: cert-manager-issuers
    namespace: cert-manager
    chart: {{ .Values.chartSources.certManagerIssuers }}
    version: 1.0.0
    createNamespace: true
    wait: true
    installed: true
    skipDeps: true
    needs:
      - cert-manager/cert-manager

  - name: traefik
    namespace: traefik
    chart: {{ .Values.chartSources.traefik }}
    version: 1.0.0
    createNamespace: true
    wait: true
    installed: true
    skipDeps: true
    needs:
      - cert-manager/cert-manager-issuers
    values:
      - traefik:
          ports:
            web:
              nodePort: 30080
            websecure:
              nodePort: 30443
{{- if eq .Environment.Name "replicated" }}
          {{- toYaml .Values.proxyImages.traefik | nindent 10 }}
{{- end }}

  # Install replicated-sdk (only in replicated environment)
  - name: replicated
    namespace: replicated
    chart: {{ .Values.chartSources.replicatedSDK }}
    version: 1.0.0
    createNamespace: true
    wait: true
    installed: {{ .Values.extras.enableReplicatedSDK }}
    skipDeps: true
    needs:
      - traefik/traefik

  - name: wg-easy
    namespace: wg-easy
    chart: {{ .Values.chartSources.wgEasy }}
    version: 1.0.0
    createNamespace: true
    wait: true
    installed: true
    skipDeps: true
    needs:
      - traefik/traefik
    values:
      - wg-easy:
          wireguard:
            host: '{{ env "TF_EXPOSED_URL" }}'
{{- if eq .Environment.Name "replicated" }}
          controllers:
            wg-easy:
              containers:
                wg-container: {{ .Values.proxyImages.wgEasy | toYaml | nindent 20 }}
{{- end }}
      - templates:
          traefikRoutes:
            web-tls:
              hostName: '{{ env "TF_EXPOSED_URL" }}'
