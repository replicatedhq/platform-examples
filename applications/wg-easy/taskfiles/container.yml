version: "3"

vars:
  CONTAINER_REGISTRY: '{{.CONTAINER_REGISTRY | default "ghcr.io"}}'
  CONTAINER_IMAGE: '{{.CONTAINER_IMAGE | default "replicatedhq/platform-examples/wg-easy-tools"}}'
  CONTAINER_TAG: '{{.CONTAINER_TAG | default "latest"}}'
  CONTAINER_NAME: '{{.CONTAINER_NAME | default "wg-easy-tools"}}'
  CONTAINER_RUNTIME: '{{.CONTAINER_RUNTIME | default "podman"}}'

tasks:
  exec:
    desc: Run command in container
    silent: true
    run: once
    requires:
      vars: [CONTAINER_NAME, IMAGE_NAME]
    deps:
      - task: check-image-exists
    cmds:
      - |
        {{.CONTAINER_RUNTIME}} run --rm -it \
          -v $(pwd):/workspace \
          -v $(pwd)/taskfiles/internal.yaml:/workspace/Taskfile.yaml \
          -e REPLICATED_API_TOKEN={{ .REPLICATED_API_TOKEN }} \
          {{.IMAGE_NAME}} {{.CMD}}
    vars:
      CMD: "{{if .CMD}}bash -c '{{.CMD}}'{{else}}/bin/bash{{end}}"
      IMAGE_NAME: '{{.CONTAINER_REGISTRY}}/{{.CONTAINER_IMAGE}}:{{.CONTAINER_TAG}}'

  build:
    run: once
    desc: Build container image
    vars:
      IMAGE_NAME: '{{.CONTAINER_REGISTRY}}/{{.CONTAINER_IMAGE}}:{{.CONTAINER_TAG}}'
      CONTAINERFILE: '{{.CONTAINERFILE | default "./container/Containerfile"}}'
      BUILD_ARGS: '{{.BUILD_ARGS | default ""}}'
      MESSAGE: "{{.MESSAGE}}"
    cmds:
      - '{{if .MESSAGE}}echo "{{.MESSAGE}}"{{end}}'
      - '{{.CONTAINER_RUNTIME}} build -t {{.IMAGE_NAME}} -f {{.CONTAINERFILE}} .'
    status:
      - '{{.CONTAINER_RUNTIME}} image exists {{.IMAGE_NAME}}'

  pull:
    run: once
    desc: Pull container image
    vars:
      IMAGE_NAME: '{{.CONTAINER_REGISTRY}}/{{.CONTAINER_IMAGE}}:{{.CONTAINER_TAG}}'
      CONTAINERFILE: '{{.CONTAINERFILE | default "./container/Containerfile"}}'
    cmds:
      - cmd: "{{.CONTAINER_RUNTIME}} pull {{.IMAGE_NAME}}"
        ignore_error: true
    status:
      - '{{.CONTAINER_RUNTIME}} image exists {{.IMAGE_NAME}}'

  # Replaces long if/else commands with idempotent tasks and task-color user feedback
  check-image-exists:
    desc: If image does not exist, tries to pull. If pull fails, tries to build
    run: always
    vars:
      IMAGE_NAME: '{{.CONTAINER_REGISTRY}}/{{.CONTAINER_IMAGE}}:{{.CONTAINER_TAG}}'
    cmds:
      - echo "Image '{{.IMAGE_NAME}}' does not exist. Trying pull"
      - task: pull
      - task: build
        vars:
          MESSAGE: "Pull failed. Trying build"
    status:
      - '{{.CONTAINER_RUNTIME}} image exists {{.IMAGE_NAME}}'
